function pn_out = pn_filter(x, fs, az, el)

% applies delays based on pinna reflections

% compute angles in radians
az = az * pi/180; 
el = el * pi/180;

% define constants
ref = [ 1 0.5 -1 0.5 -0.25 0.25]; % reflection coefficients
A = [1 5 5 5 5];                  % amplitude
B = [2 4 7 11 13];                % offset
D = [1 0.5 0.5 0.5 0.5];          % scaling factor - for individualization

% memory allocation
T_pn = [0 0 0 0 0 0]; 
del_p = [0 0 0 0 0 0];

% calculate 5 disting delays
for i = 2:6
T_pn(i) = A(i-1)*cos(az/2)*sin(D(i-1)*(pi/2-el)) + B(i-1); 
del_p(i) = T_pn(i)/1000 * fs;
end

frac_del(x,del_sh,0);

% sum and return input plus 5 delayed copies
pn_out = frac_del(); zeros(1,length(x)+max(del_p)); 
temp_y = zeros(6, length(x)+max(del_p)); 
for i = 1:6
temp_y(i, (del_p(i)+1):(del_p(i)+length(x)) ) = x*ref(i);
pn_out = pn_out + temp_y(i,:);
end

end